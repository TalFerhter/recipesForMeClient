[{"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\index.js":"1","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\App.js":"2","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\UploadFile.jsx":"4","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\WordsList.jsx":"5","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\HomePage.jsx":"6","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\PhrasesList.jsx":"7","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\RecipesPage.jsx":"8"},{"size":524,"mtime":1609583691424,"results":"9","hashOfConfig":"10"},{"size":1550,"mtime":1609616620014,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":5533,"mtime":1609686520421,"results":"13","hashOfConfig":"10"},{"size":2627,"mtime":1609688491199,"results":"14","hashOfConfig":"10"},{"size":253,"mtime":1609605715496,"results":"15","hashOfConfig":"10"},{"size":1853,"mtime":1609607937210,"results":"16","hashOfConfig":"10"},{"size":297,"mtime":1609617313467,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"pjg0y",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\index.js",["38"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["39","40"],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\App.js",["41","42","43","44","45"],"import logo from './logo.svg';\nimport './App.css';\nimport RecipesPage from './components/RecipesPage'\nimport WordsList from './components/WordsList';\nimport PhrasesList from './components/PhrasesList';\nimport HomePage from './components/HomePage';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/WordsList\">Words</Link>\n            </li>\n            <li>\n              <Link to=\"/PhrasesList\">Phrases</Link>\n            </li>\n            <li>\n              <Link to=\"/RecipesPage\">Recipes</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/WordsList\">\n            <WordsList />\n          </Route>\n          <Route path=\"/PhrasesList\">\n            <PhrasesList />\n          </Route>\n          <Route path=\"/RecipesPage\">\n            <RecipesPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction Words() {\n  return <h2>Words</h2>;\n}\n\nfunction Phrases() {\n  return <h2>Phrases</h2>;\n}\n\nfunction Recipes() {\n  return <h2>Recipes</h2>;\n}\n\nexport default App;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\UploadFile.jsx",["46"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nconst API = 'http://127.0.0.1:8080/uploadFile';\r\n//const myInput = document.getElementById(this.state.value);\r\nlet API_ROUTE = '';\r\n\r\nclass UploadFile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  selectedFile: '',\r\n                        answer: '',\r\n                        recipeName: '',\r\n                        siteName: '',\r\n                        authorName: '',\r\n                        path: '',\r\n                        publishDate: '',\r\n                        cookTime: '',\r\n                        prepTime: '',\r\n                        totalTime: '',\r\n                        yieldMin: '',\r\n                        yieldMax: '',\r\n                        category: '',\r\n                        level: ''\r\n                    };\r\n    \r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n      }    \r\n\r\n    // On file select (from the pop up) \r\n    onFileChange = event => { \r\n     \r\n        // Update the state \r\n        this.setState({ selectedFile: event.target.files[0] }); \r\n       \r\n    };  \r\n\r\n    // On file upload (click the upload button) \r\n    onRecipeUpload = () => {\r\n\r\n        // Create an object of formData \r\n        const formData = new FormData();\r\n\r\n        // Update the formData object \r\n        formData.append(\"file\",\r\n                        this.state.selectedFile,\r\n                        this.state.selectedFile.name\r\n                        );\r\n        \r\n        // Details of the uploaded file \r\n        console.log(this.state.selectedFile);\r\n        \r\n        // Request made to the backend api \r\n        // Send formData object \r\n        axios.post(API, formData);\r\n    };\r\n\r\n    handleInputChange(event) {\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      this.setState({[name]: value});\r\n    };\r\n    \r\n         // File content to be displayed after \r\n    // file upload is complete \r\n    fileData = () => { \r\n     \r\n        if (this.state.selectedFile) { \r\n            \r\n          return ( \r\n            <div> \r\n              <h2>File Details:</h2> \r\n              <p>File Name: {this.state.selectedFile.name}</p> \r\n              <p>File Type: {this.state.selectedFile.type}</p> \r\n              <p> \r\n                Last Modified:{\" \"} \r\n                {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n              </p> \r\n              <form>\r\n                <label for=\"recipeName\">Recipe name:</label>\r\n                <input name=\"recipeName\" type=\"text\" value={this.state.recipeName} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"siteName\">Site name:</label>\r\n                <input name=\"siteName\" type=\"text\" value={this.state.siteName} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"authorName\">Author name:</label>\r\n                <input name=\"authorName\" type=\"text\" value={this.state.authorName} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"path\">Path Url:</label>\r\n                <input name=\"path\" type=\"url\" value={this.state.path} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"publishDate\">Publish date:</label>\r\n                <input name=\"publishDate\" type=\"date\" value={this.state.publishDate} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"cookTime\">Cook time:</label>\r\n                <input name=\"cookTime\" type=\"time\" value={this.state.cookTime} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"prepTime\">Preperation time:</label>\r\n                <input name=\"prepTime\" type=\"time\" value={this.state.prepTime} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"totalTime\">Total time:</label>\r\n                <input name=\"totalTime\" type=\"time\" value={this.state.totalTime} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"yieldMin\">Yield(min)</label>\r\n                <input name=\"yieldMin\" type=\"number\" value={this.state.yieldMin} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"yieldMax\">Yield(max)</label>\r\n                <input name=\"yieldMax\" type=\"number\" value={this.state.yieldMax} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"category\">Category</label>\r\n                <input name=\"category\" type=\"text\" value={this.state.category} onChange={this.handleInputChange}></input><br></br>\r\n                <label for=\"level\">Level</label>\r\n                <input name=\"level\" type=\"text\" value={this.state.level} onChange={this.handleInputChange}></input><br></br>\r\n              </form>\r\n            </div> \r\n          ); \r\n        } else { \r\n          return ( \r\n            <div> \r\n              <br /> \r\n              <h4>Choose before Pressing the Upload button</h4> \r\n            </div> \r\n          ); \r\n        } \r\n      }; \r\n\r\n     render() { \r\n        return (\r\n            <div>\r\n                <form>\r\n                    <label>File: <input type=\"file\" onChange={this.onFileChange}></input> </label>\r\n                </form>\r\n                {this.fileData()}\r\n                <input type=\"submit\" value=\"Upload\" onClick={this.onRecipeUpload}></input>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default UploadFile;","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\WordsList.jsx",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\HomePage.jsx",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\PhrasesList.jsx",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\RecipesPage.jsx",[],{"ruleId":"47","severity":1,"message":"48","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":23},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"47","severity":1,"message":"55","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"56","line":57,"column":10,"nodeType":"49","messageId":"50","endLine":57,"endColumn":14},{"ruleId":"47","severity":1,"message":"57","line":61,"column":10,"nodeType":"49","messageId":"50","endLine":61,"endColumn":15},{"ruleId":"47","severity":1,"message":"58","line":65,"column":10,"nodeType":"49","messageId":"50","endLine":65,"endColumn":17},{"ruleId":"47","severity":1,"message":"59","line":69,"column":10,"nodeType":"49","messageId":"50","endLine":69,"endColumn":17},{"ruleId":"47","severity":1,"message":"60","line":6,"column":5,"nodeType":"49","messageId":"50","endLine":6,"endColumn":14},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'logo' is defined but never used.","'Home' is defined but never used.","'Words' is defined but never used.","'Phrases' is defined but never used.","'Recipes' is defined but never used.","'API_ROUTE' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]