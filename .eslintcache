[{"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\index.js":"1","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\App.js":"2","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\HomePage.jsx":"4","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Recipes\\RecipesPage.jsx":"5","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\MainMenu.jsx":"6","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Words\\WordsList.jsx":"7","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Recipes\\UploadFile.jsx":"8","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Recipes\\FindRecipe.jsx":"9","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Groups\\GroupList.jsx":"10","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Groups\\AddWordsToGroup.jsx":"11","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Groups\\NewGroup.jsx":"12","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Phrases\\FindPhrase.jsx":"13","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Words\\WordContext.jsx":"14","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Phrases\\NewPhrase.jsx":"15","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Words\\WordStatistics.jsx":"16"},{"size":523,"mtime":1609775752548,"results":"17","hashOfConfig":"18"},{"size":496,"mtime":1610620001298,"results":"19","hashOfConfig":"18"},{"size":364,"mtime":1609775752555,"results":"20","hashOfConfig":"18"},{"size":435,"mtime":1610974117723,"results":"21","hashOfConfig":"18"},{"size":236,"mtime":1610006348145,"results":"22","hashOfConfig":"18"},{"size":3636,"mtime":1610974330975,"results":"23","hashOfConfig":"18"},{"size":5093,"mtime":1610979694801,"results":"24","hashOfConfig":"18"},{"size":9885,"mtime":1610959446822,"results":"25","hashOfConfig":"18"},{"size":9766,"mtime":1610981418925,"results":"26","hashOfConfig":"18"},{"size":2484,"mtime":1610900387549,"results":"27","hashOfConfig":"18"},{"size":3858,"mtime":1610900387247,"results":"28","hashOfConfig":"18"},{"size":2720,"mtime":1610900387820,"results":"29","hashOfConfig":"18"},{"size":4701,"mtime":1610900388285,"results":"30","hashOfConfig":"18"},{"size":1885,"mtime":1610977444195,"results":"31","hashOfConfig":"18"},{"size":1534,"mtime":1610900388331,"results":"32","hashOfConfig":"18"},{"size":3259,"mtime":1610956112053,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"pjg0y",{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"37"},"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\index.js",["77"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["78","79"],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\App.js",["80","81","82","83","84","85","86","87","88"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MainMenu from \"./components/MainMenu\";\n\nfunction App() {\n  return (\n    <div>\n      <MainMenu />\n    </div>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction Words() {\n  return <h2>Words</h2>;\n}\n\nfunction Phrases() {\n  return <h2>Phrases</h2>;\n}\n\nfunction Recipes() {\n  return <h2>Recipes</h2>;\n}\n\nexport default App;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\HomePage.jsx",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Recipes\\RecipesPage.jsx",[],["89","90"],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\MainMenu.jsx",["91","92"],"import React, { Component } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  BoldOutlined,\n  MessageOutlined,\n  ReadOutlined,\n  GoogleOutlined,\n  HomeFilled\n} from \"@ant-design/icons\";\nimport UploadFile from \"./Recipes/UploadFile\";\nimport WordsList from \"./Words/WordsList\";\nimport GroupList from \"./Groups/GroupList\";\nimport AddWordsToGroup from \"./Groups/AddWordsToGroup\";\nimport NewGroup from \"./Groups/NewGroup\";\nimport FindRecipe from \"./Recipes/FindRecipe\";\nimport FindPhrase from \"./Phrases/FindPhrase\";\nimport NewPhrase from \"./Phrases/NewPhrase\";\nimport WordStatistics from \"./Words/WordStatistics\";\nimport HomePage from \"./HomePage\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nclass MainMenu extends Component {\n  state = { content: (<HomePage />) };\n\n  onSideMenuClick = (event) => {\n    // Update the state\n    switch (event.key) {\n      case \"home\": {\n        this.setState({ content: <HomePage /> });\n        break;\n      }\n      case \"searchWord\": {\n        this.setState({ content: <WordsList /> });\n        break;\n      }\n      case \"statistics\": {\n        this.setState({ content: <WordStatistics />})\n        break;\n      }\n      case \"searchPhrase\": {\n        this.setState({ content: <FindPhrase /> });\n        break;\n      }\n      case \"addPhrase\": {\n        this.setState({ content: <NewPhrase /> });\n        break;\n      }\n      case \"listGroup\": {\n        this.setState({ content: <GroupList /> });\n        break;\n      }\n      case \"newGroup\": {\n        this.setState({ content: <NewGroup /> });\n        break;\n      }\n      case \"addWordsToGroup\": {\n        this.setState({ content: <AddWordsToGroup /> });\n        break;\n      }\n      case \"addRecipe\": {\n        this.setState({ content: <UploadFile /> });\n        break;\n      }\n      case \"searchRecipe\": {\n        this.setState({ content: <FindRecipe /> });\n        break;\n      }\n      default: {\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          defaultSelectedKeys={[\"1\"]}\n          defaultOpenKeys={[\"sub1\"]}\n          style={{ height: \"100%\", borderRight: 0 }}\n          onClick={this.onSideMenuClick}\n        >\n          \n            <Menu.Item key=\"home\" icon={<HomeFilled />}></Menu.Item>\n       \n          \n          <SubMenu key=\"subWords\" icon={<BoldOutlined />} title=\"Words\">\n            <Menu.Item key=\"searchWord\">Search</Menu.Item>\n            <Menu.Item key=\"statistics\">Statistics</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"subGroup\" icon={<GoogleOutlined />} title=\"Groups\">\n            <Menu.Item key=\"listGroup\">List</Menu.Item>\n            <Menu.Item key=\"newGroup\">New Group</Menu.Item>\n            <Menu.Item key=\"addWordsToGroup\">Add Words</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"subPhrases\" icon={<MessageOutlined />} title=\"Phrases\">\n            <Menu.Item key=\"searchPhrase\">Search</Menu.Item>\n            <Menu.Item key=\"addPhrase\">Add</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"subRecipes\" icon={<ReadOutlined />} title=\"Recipes\">\n            <Menu.Item key=\"searchRecipe\">Search</Menu.Item>\n            <Menu.Item key=\"addRecipe\">Add</Menu.Item>\n          </SubMenu>\n        </Menu>\n        <Layout style={{ padding: \"0 24px 24px\" }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 680,\n            }}\n          >\n            {this.state.content}\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default MainMenu;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Words\\WordsList.jsx",["93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Recipes\\UploadFile.jsx",["107","108","109","110","111","112","113","114","115","116","117","118","119"],"import axios from \"axios\";\nimport React, { Component, useState } from \"react\";\nimport {\n  Form,\n  TimePicker,\n  Input,\n  Select,\n  InputNumber,\n  Button,\n  DatePicker,\n  Upload,\n  message,\n  Alert,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { IconName } from \"react-icons/ai\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nconst API = \"http://127.0.0.1:8080/uploadFile\";\n\nconst { Option } = Select;\n\nconst rangeConfig = {\n  rules: [\n    {\n      type: \"array\",\n      required: true,\n      message: \"Please select yield!\",\n    },\n  ],\n};\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\n\nconst TimeRelatedForm = () => {\n  const onFinish = (fieldsValue) => {\n    // Should format date value before submit.\n    const rangeValue = fieldsValue[\"range-picker\"];\n    const rangeTimeValue = fieldsValue[\"range-time-picker\"];\n    const values = {\n      ...fieldsValue,\n      \"date-picker\": fieldsValue[\"date-picker\"].format(\"YYYY-MM-DD\"),\n      \"time-picker\": fieldsValue[\"time-picker\"].format(\"HH:mm:ss\"),\n    };\n    console.log(\"Received values of form: \", values);\n  };\n};\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n};\n\nclass UploadFile extends Component {\n  state = {\n    uploading: false,\n    selectedFile: null,\n    recipeName: null,\n    siteName: null,\n    authorName: null,\n    path: null,\n    data: null,\n    cookTime: null,\n    prepTime: null,\n    totalTime: null,\n    yieldMin: null,\n    yieldMax: null,\n    category: null,\n    level: null,\n    categories: null,\n    levels: null,\n    children: null,\n    alertVisible: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = this.onFileChange.bind(this);\n    this.beforeUpload = this.beforeUpload.bind(this);\n    const APICategories = \"http://127.0.0.1:8080/categories\";\n    const APILevels = \"http://127.0.0.1:8080/levels\";\n\n    axios\n      .get(APICategories)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(\n        (data) => {\n          this.setState({ categories: data });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n    axios\n      .get(APILevels)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(\n        (data) => {\n          this.setState({ levels: data });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  // On file upload (click the upload button)\n  onRecipeUpload = () => {\n    if (this.state.selectedFile === \"\") {\n      message.error(\"Please upload file!\");\n      return false;\n    }\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\n      \"file\",\n      this.state.selectedFile.originFileObj\n        ? this.state.selectedFile.originFileObj\n        : this.state.selectedFile\n    );\n    formData.append(\"recipeName\", this.state.recipeName);\n    formData.append(\"siteName\", this.state.siteName);\n    formData.append(\"authorName\", this.state.authorName);\n    formData.append(\"path\", this.state.path);\n    formData.append(\"date\", this.state.date);\n    formData.append(\"cookTime\", this.state.cookTime);\n    formData.append(\"prepTime\", this.state.prepTime);\n    formData.append(\"totalTime\", this.state.totalTime);\n    formData.append(\"yieldMin\", this.state.yieldMin);\n    formData.append(\"yieldMax\", this.state.yieldMax ? this.state.yieldMax : \"\");\n    formData.append(\"category\", this.state.category);\n    formData.append(\"level\", this.state.level);\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n\n    // Request made to the backend api\n    // Send formData object\n    axios.post(API, formData).then(\n      (response) => {\n        console.log(response);\n        if (response.data == \"Upload complete\") {\n          this.setState({ alertVisible: true });\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  // On file select (from the pop up)\n  onFileChange = (file, filelist, event) => {\n    // Update the state\n    if (!file.file.error) {\n      this.state.selectedFile = file.file;\n    } else if (file.file.status == \"removed\") {\n      this.state.selectedFile = \"\";\n    }\n    this.setState({ alertVisible: false });\n  };\n\n  beforeUpload(file) {\n    const isTxt = file.type === \"text/plain\";\n    if (!isTxt) {\n      message.error(\"You can only upload txt file!\");\n      return false;\n    }\n    if (this.state.selectedFile) {\n      message.error(\"You can only upload one recipe!\");\n      return false;\n    }\n    return true;\n  }\n\n  onInputChange = (event) => {\n    const target = event.target;\n    const name = target.id;\n    const value = target.value;\n    this.setState({ [name]: value });\n    this.setState({ alertVisible: false });\n  };\n\n  onPickerChange = (time, timeString, id) => {\n    this.setState({ [id]: timeString });\n    this.setState({ alertVisible: false });\n  };\n\n  onSelectChange = (value, option, id) => {\n    this.setState({ [id]: option.children });\n    this.setState({ alertVisible: false });\n  };\n\n  onAlertClose = () => {\n    this.setState({ alertVisible: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form {...layout} onFinish={this.onRecipeUpload}>\n          {this.state.alertVisible ? (\n            <Alert\n              message=\"Update completed\"\n              type=\"success\"\n              closable\n              afterClose={this.onAlertClose}\n            ></Alert>\n          ) : null}\n          <Upload\n            onChange={this.onFileChange}\n            beforeUpload={this.beforeUpload}\n            listType=\"text\"\n            multiple={false}\n          >\n            <Button icon={<UploadOutlined />}>Select File</Button>\n          </Upload>\n          <br></br>\n          <Form.Item\n            name=\"recipeName\"\n            label=\"Recipe Name\"\n            rules={[{ required: true, message: \"Please enter recipe name\" }]}\n          >\n            <Input onChange={this.onInputChange} id=\"recipeName\" />\n          </Form.Item>\n          <Form.Item\n            name=\"siteName\"\n            label=\"Website Name\"\n            rules={[{ required: true, message: \"Please enter site name\" }]}\n          >\n            <Input onChange={this.onInputChange} id=\"siteName\" />\n          </Form.Item>\n          <Form.Item name=\"authorName\" label=\"Author\">\n            <Input onChange={this.onInputChange} id=\"authorName\" />\n          </Form.Item>\n          <Form.Item\n            name=\"path\"\n            label=\"Website Url\"\n            rules={[{ required: true, message: \"Please enter website link\" }]}\n          >\n            <Input onChange={this.onInputChange} id=\"path\" />\n          </Form.Item>\n          <Form.Item name=\"date\" label=\"Publish date\">\n            <DatePicker\n              showTime\n              format=\"DD-MM-YYYY\"\n              onChange={(date, dateString) =>\n                this.onPickerChange(date, dateString, \"date\")\n              }\n            />\n          </Form.Item>\n          <Form.Item name=\"cookTime\" label=\"Cooking time\">\n            <TimePicker\n              onChange={(date, dateString) =>\n                this.onPickerChange(date, dateString, \"cookTime\")\n              }\n            />\n          </Form.Item>\n          <Form.Item name=\"prepTime\" label=\"Preperation time\">\n            <TimePicker\n              onChange={(date, dateString) =>\n                this.onPickerChange(date, dateString, \"prepTime\")\n              }\n            />\n          </Form.Item>\n          <Form.Item name=\"totalTime\" label=\"Total time\">\n            <TimePicker\n              onChange={(date, dateString) =>\n                this.onPickerChange(date, dateString, \"totalTime\")\n              }\n            />\n          </Form.Item>\n          <Form.Item name=\"min-yield\" label=\"Min Yield\">\n            <InputNumber\n              onChange={(value) => {\n                this.setState({ yieldMin: value });\n              }}\n              id=\"yieldMin\"\n            />\n          </Form.Item>\n          <Form.Item name=\"max-yield\" label=\"Max Yield\">\n            <InputNumber\n              onChange={(value) => {\n                this.setState({ yieldMax: value });\n              }}\n              id=\"yieldMax\"\n            />\n          </Form.Item>\n          <Form.Item\n            name={[\"Category\", \"category\"]}\n            wrapperCol={{ span: 6 }}\n            //rules={[{ required: true, message: \"Category is required\" }]}\n            label=\"Category\"\n          >\n            <Select\n              placeholder=\"Select category\"\n              onChange={(value, option) =>\n                this.onSelectChange(value, option, \"category\")\n              }\n            >\n              {this.state.categories &&\n                this.state.categories.map((c) => {\n                  return <Option value={c}>{c}</Option>;\n                })}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name={[\"Level\", \"level\"]}\n            wrapperCol={{ span: 6 }}\n            label=\"Level\"\n          >\n            <Select\n              placeholder=\"Select level\"\n              onChange={(value, option) =>\n                this.onSelectChange(value, option, \"level\")\n              }\n            >\n              {this.state.levels &&\n                this.state.levels.map((l) => {\n                  return <Option value={l}>{l}</Option>;\n                })}\n            </Select>\n          </Form.Item>\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default UploadFile;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Recipes\\FindRecipe.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Groups\\GroupList.jsx",["134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  Collapse,\n  Table,\n  Select,\n  Form,\n  Input,\n  Button,\n  Space,\n  Tag,\n  Checkbox,\n  Row,\n  Col,\n} from \"antd\";\nconst { Option } = Select;\n\nconst APIGroups = \"http://127.0.0.1:8080/groups\";\nconst APIWords = \"http://127.0.0.1:8080/words/noGroup\";\nconst API = \"http://127.0.0.1:8080/\";\nconst AddWordsRoute = \"/addWords\";\nconst APIWordsOfGroupRoute = \"http://127.0.0.1:8080/words/withGroup\";\n\nconst columns = [\n  {\n    title: \"Group\",\n    dataIndex: \"groupName\",\n    width: 150,\n  },\n  {\n    title: \"Words\",\n    key: \"words\",\n    dataIndex: \"words\",\n    render: (words) => (\n      <span>\n        {words.map((word) => {\n          return (\n            <Tag color=\"blue\" key={word}>\n              {word}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n];\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      words: [],\n      groups: [],\n      options: [],\n    };\n\n    axios\n      .get(APIGroups)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(\n        (data) => {\n          let groupWords = data.map((g) => {\n            let gWords = [];\n            g.words.map((w) => {\n              gWords.push(w.word);\n            });\n            return { groupName: g.groupName, words: gWords };\n          });\n          this.setState({ groups: groupWords });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n    let temp = this.state.groups.map((group) => {\n      return {\n        groupName: group.groupName,\n        groupWords: this.getGroupWords(group.groupName),\n      };\n    });\n  }\n\n  getGroupWords(groupName) {\n    let API = APIWordsOfGroupRoute + \"?groupName=\" + groupName;\n    axios\n      .get(API)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then((data) => {\n        return data;\n      })\n      .catch((error) => this.setState(error));\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Groups</h4>\n        <Table\n          columns={columns}\n          dataSource={this.state.groups}\n          pagination={{ pageSize: 4 }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupList;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Groups\\AddWordsToGroup.jsx",["148","149","150","151","152","153"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Select, Form, Button, Space, Checkbox, Row, Col } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport SizeContext from \"antd/lib/config-provider/SizeContext\";\n\nconst APIGroups = \"http://127.0.0.1:8080/groups\";\nconst APIWords = \"http://127.0.0.1:8080/words/noGroup\";\nconst API = \"http://127.0.0.1:8080/\";\nconst AddWordsRoute = \"/addWords\";\nconst APIWordsOfGroupRoute = \"http://127.0.0.1:8080/words/withGroup\";\nconst { Option } = Select;\n\nclass AddWordsToGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      words: [],\n      groups: [],\n      options: [],\n      selectedGroup: \"\",\n      selectedWords: [],\n    };\n\n    axios\n      .get(APIGroups)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(\n        (data) => {\n          let groupWords = data.map((g) => {\n            let gWords = [];\n            g.words.map((w) => {\n              gWords.push(w.word);\n            });\n            return { groupName: g.groupName, words: gWords };\n          });\n          this.setState({ groups: groupWords });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n    axios\n      .get(APIWords)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then((data) => {\n        this.setState({ words: data });\n      })\n      .catch((error) => this.setState(error));\n  }\n\n  onSelectChange = (value, option, id) => {\n    this.setState({ selectedGroup: option.children });\n  };\n\n  onCheck = (checkedValues) => {\n    this.setState({ selectedWords: checkedValues });\n  };\n\n  onFinish = () => {\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\"groupName\", this.state.selectedGroup);\n    formData.append(\"wordList\", this.state.selectedWords);\n\n    let APIRoute = APIGroups + AddWordsRoute;\n\n    axios\n      .post(APIRoute, formData)\n      .then((response) => {\n        console.log(response);\n      })\n      .then((data) => {})\n      .catch((error) => {\n        console.log(error);\n      });\n    this.getWords();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.raiseAlert}\n        <Space direction=\"vertical\">\n          <Form\n            name=\"addWordsToGroup\"\n            onFinish={this.onFinish}\n            autoComplete=\"off\"\n          >\n            <Form.Item>\n              <Select\n                placeholder=\"Select group\"\n                onChange={(value, option) =>\n                  this.onSelectChange(value, option, \"group\")\n                }\n              >\n                {this.state.groups &&\n                  this.state.groups.map((g) => {\n                    return <Option value={g.groupName}>{g.groupName}</Option>;\n                  })}\n              </Select>\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n            <Checkbox.Group style={{ width: \"100%\" }} onChange={this.onCheck}>\n              <Row>\n                {this.state.words &&\n                  this.state.words.map(function (w) {\n                    return (\n                      <Col span={8}>\n                        <Checkbox value={w.word}>{w.word}</Checkbox>\n                      </Col>\n                    );\n                  })}\n              </Row>\n            </Checkbox.Group>\n          </Form>\n        </Space>\n      </div>\n    );\n  }\n}\n\nexport default AddWordsToGroup;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Groups\\NewGroup.jsx",["154","155","156","157","158","159","160","161","162"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  Collapse,\n  Table,\n  Select,\n  Form,\n  Input,\n  Button,\n  Space,\n  Tag,\n  Checkbox,\n  Row,\n  Col,\n} from \"antd\";\n\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nconst API = \"http://127.0.0.1:8080/groups/newGroup\";\n\nclass NewGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      words: [],\n      groupName: \"\",\n    };\n  }\n\n  onFinish = (fields) => {\n    this.state.words = [];\n    fields.words.map((word) => {\n      this.state.words.push(word.word);\n    });\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\"groupName\", fields.groupName.name);\n    formData.append(\"wordList\", this.state.words);\n\n    axios\n      .post(API, formData)\n      .then((response) => {\n        console.log(response);\n      })\n      .then((data) => {})\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form name=\"newGroup\" onFinish={this.onFinish} autoComplete=\"off\">\n          <Form.Item\n            name={[\"groupName\", \"name\"]}\n            label=\"Name\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.List name=\"words\">\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: \"flex\", marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, \"word\"]}\n                      fieldKey={[field.fieldKey, \"word\"]}\n                      rules={[{ required: true, message: \"Missing word\" }]}\n                    >\n                      <Input placeholder=\"Word\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                    span={10}\n                  >\n                    Add word\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default NewGroup;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Phrases\\FindPhrase.jsx",["163","164","165","166","167","168"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Form, Input, Select, Button } from \"antd\";\n\nconst { Option } = Select;\nconst API = \"http://127.0.0.1:8080/phrases/findPhrase\";\nconst APISearch = \"http://127.0.0.1:8080/phrases/\";\n\nclass FindPhrase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phrases: [],\n      value: \"\",\n      searchPhrase: [],\n      existingPhrases: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.phraseMap = this.phraseMap.bind(this);\n\n    axios\n      .get(APISearch)\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then(\n        (data) => {\n          this.setState({ existingPhrases: this.phraseMap(data) });\n          this.setState({ searchPhrase: data });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  columns = [\n    {\n      title: \"Phrase\",\n      dataIndex: \"phrase\",\n      width: 150,\n    },\n    {\n      title: \"Recipe\",\n      dataIndex: \"recipeName\",\n      width: 150,\n    },\n    {\n      title: \"Paragraph\",\n      dataIndex: \"paragraph\",\n      width: 150,\n    },\n    {\n      title: \"Row\",\n      dataIndex: \"row\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.row - b.row,\n      },\n      sortDirections: [\"descend\", \"ascend\"],\n    },\n    {\n      title: \"Col\",\n      dataIndex: \"col\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.col - b.col,\n      },\n      sortDirections: [\"descend\", \"ascend\"],\n    },\n  ];\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  onInputChange = (event) => {\n    const target = event.target;\n    const name = target.id;\n    const value = target.value;\n    this.setState({ [name]: value });\n  };\n\n  onSelectChange = (value, option, id) => {\n    this.setState({ phrases: [] });\n    let phrasePositions = [];\n    this.state.existingPhrases.map((phrase) => {\n      if (phrase.phrase == value) {\n        phrasePositions.push(phrase);\n      }\n    });\n    this.setState({ phrases: phrasePositions });\n  };\n\n  getPhrases = () => {\n    let params = { text: this.state.searchPhrase };\n\n    axios\n      .get(API, { params })\n      .then((res) => {\n        if (res.status) {\n          console.log(res);\n          return res.data;\n        } else {\n          throw new Error(\"Something went wrong...\");\n        }\n      })\n      .then((data) => {\n        this.setState({ phrases: this.phraseMap(data) });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  phraseMap(data) {\n    let phraseList = [];\n    data.map(function (currPhrase) {\n      currPhrase.positions.map((currPos) => {\n        phraseList.push({\n          phrase: currPhrase.text,\n          recipeName: currPos.recipe.recipeName,\n          paragraph: currPos.paragraph.title,\n          row: currPos.row,\n          col: currPos.col,\n        });\n      });\n    });\n    phraseList.push({\n      phrase: \"\",\n      recipeName: \"\",\n      paragraph: \"\",\n      row: \"\",\n      col: \"\",\n    });\n    return phraseList;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Search for a phrase:</h4>\n        <span>\n          <Form onFinish={this.getPhrases}>\n            <Form.Item\n              name={[\"Phrase\", \"selectedPhrase\"]}\n              wrapperCol={{ span: 6 }}\n              label=\"Phrase\"\n            >\n              <Select\n                placeholder=\"Select phrase\"\n                onChange={(value, option) =>\n                  this.onSelectChange(value, option, \"phrase\")\n                }\n              >\n                {this.state.searchPhrase &&\n                  this.state.searchPhrase.map((phrase) => {\n                    return <Option value={phrase.text}>{phrase.text}</Option>;\n                  })}\n                <Option></Option>;\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"searchPhrase\" label=\"Search Phrase\">\n              <Input onChange={this.onInputChange} id=\"searchPhrase\" />\n            </Form.Item>\n            <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </span>\n        <div>\n          <ul>\n            <Table\n              columns={this.columns}\n              dataSource={this.state.phrases}\n              pagination={{ pageSize: 10 }}\n              scroll={{ y: 240 }}\n            />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FindPhrase;\n","C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Words\\WordContext.jsx",["169","170"],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Phrases\\NewPhrase.jsx",[],"C:\\Users\\Tal Fershter\\Documents\\University\\Workshop\\Frontend\\src\\components\\Words\\WordStatistics.jsx",["171"],"import React, { Component } from \"react\";\r\nimport { Statistic, Row, Col, Button } from 'antd';\r\nimport axios from \"axios\";\r\n\r\nclass WordStatistics extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            maxRowLength: null,\r\n            avgRowLength: null,\r\n            maxColLength: null, \r\n            avgColLength: null,\r\n            maxWordLength: null,\r\n            avgWordLength: null,\r\n            countRecipes: null,\r\n            countWords: null,\r\n            countPositions: null\r\n        };\r\n\r\n        const API = \"http://127.0.0.1:8080/words/statistics\";\r\n\r\n        axios\r\n      .get(API)\r\n      .then((res) => {\r\n        if (res.status) {\r\n          console.log(res);\r\n          return res.data;\r\n        } else {\r\n          throw new Error(\"Something went wrong...\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.setState({maxRowLength: data.maxRowLength,\r\n            avgRowLength: data.averageRowLength,\r\n            maxColLength: data.maxColLength, \r\n            avgColLength: data.averageColLength,\r\n            maxWordLength: data.maxWordLength,\r\n            avgWordLength: data.averageWordLength,\r\n            countRecipes: data.countRecipes,\r\n            countWords: data.countWords, \r\n            countPositions: data.countPositions});\r\n        console.log(data);\r\n        console.table(data);\r\n\r\n        /*this.setState({\r\n          text: data.map((word) => {\r\n            return word + \" \";\r\n          }),\r\n        });*/\r\n      })\r\n      .catch((error) => this.setState(error));\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row gutter={16}>\r\n    <Col span={8}>\r\n      <Statistic title=\"Words\" value={this.state.countWords} />\r\n    </Col>\r\n    <Col span={8}>\r\n      <Statistic title=\"Average word length\" value={this.state.avgWordLength} precision={2} />\r\n    </Col>\r\n    <Col span={8}>\r\n      <Statistic title=\"Longest word length\" value={this.state.maxWordLength} precision={2} />\r\n    </Col>\r\n    </Row>\r\n    <br/>\r\n    <Row>\r\n    <Col span={8}>\r\n      <Statistic title=\"Recipes\" value={this.state.countRecipes}/>\r\n    </Col>\r\n    <Col span={8}>\r\n      <Statistic title=\"Average recipes length (in characters)\" value={this.state.avgRowLength * this.state.avgColLength * this.state.avgWordLength} precision={2} />\r\n    </Col>\r\n    <Col span={8}>\r\n      <Statistic title=\"Average recipes length (in words)\" value={this.state.avgRowLength * this.state.avgColLength} precision={2} />\r\n    </Col>\r\n  </Row>\r\n  <br/>\r\n  <Row>\r\n    <Col span={8}>\r\n      <Statistic title=\"Positions amount\" value={this.state.countPositions}/>\r\n    </Col>\r\n    </Row>\r\n    <br/>\r\n    <Row>\r\n    <Col span={5}>\r\n      <Statistic title=\"Average row length\" value={this.state.avgRowLength} precision={2} />\r\n    </Col>\r\n    <Col span={5}>\r\n      <Statistic title=\"Maximum row length\" value={this.state.maxRowLength} precision={2} />\r\n    </Col>\r\n    <Col span={5}>\r\n      <Statistic title=\"Average column length\" value={this.state.avgColLength} precision={2} />\r\n    </Col>\r\n    <Col span={5}>\r\n      <Statistic title=\"Maximum column length\" value={this.state.maxColLength} precision={2} />\r\n    </Col>\r\n  </Row>,\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordStatistics;\r\n",{"ruleId":"172","severity":1,"message":"173","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":23},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":12},{"ruleId":"172","severity":1,"message":"181","line":4,"column":27,"nodeType":"174","messageId":"175","endLine":4,"endColumn":33},{"ruleId":"172","severity":1,"message":"182","line":4,"column":35,"nodeType":"174","messageId":"175","endLine":4,"endColumn":41},{"ruleId":"172","severity":1,"message":"183","line":4,"column":43,"nodeType":"174","messageId":"175","endLine":4,"endColumn":48},{"ruleId":"172","severity":1,"message":"184","line":4,"column":50,"nodeType":"174","messageId":"175","endLine":4,"endColumn":54},{"ruleId":"172","severity":1,"message":"185","line":15,"column":10,"nodeType":"174","messageId":"175","endLine":15,"endColumn":14},{"ruleId":"172","severity":1,"message":"186","line":19,"column":10,"nodeType":"174","messageId":"175","endLine":19,"endColumn":15},{"ruleId":"172","severity":1,"message":"187","line":23,"column":10,"nodeType":"174","messageId":"175","endLine":23,"endColumn":17},{"ruleId":"172","severity":1,"message":"188","line":27,"column":10,"nodeType":"174","messageId":"175","endLine":27,"endColumn":17},{"ruleId":"176","replacedBy":"189"},{"ruleId":"178","replacedBy":"190"},{"ruleId":"172","severity":1,"message":"191","line":22,"column":9,"nodeType":"174","messageId":"175","endLine":22,"endColumn":15},{"ruleId":"172","severity":1,"message":"192","line":22,"column":26,"nodeType":"174","messageId":"175","endLine":22,"endColumn":31},{"ruleId":"172","severity":1,"message":"193","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":6},{"ruleId":"172","severity":1,"message":"194","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":8},{"ruleId":"172","severity":1,"message":"195","line":14,"column":10,"nodeType":"174","messageId":"175","endLine":14,"endColumn":19},{"ruleId":"172","severity":1,"message":"196","line":19,"column":7,"nodeType":"174","messageId":"175","endLine":19,"endColumn":17},{"ruleId":"172","severity":1,"message":"197","line":20,"column":7,"nodeType":"174","messageId":"175","endLine":20,"endColumn":17},{"ruleId":"172","severity":1,"message":"198","line":21,"column":5,"nodeType":"174","messageId":"175","endLine":21,"endColumn":14},{"ruleId":"172","severity":1,"message":"199","line":22,"column":7,"nodeType":"174","messageId":"175","endLine":22,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":94,"column":7,"nodeType":"202","messageId":"203","endLine":94,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":104,"column":28,"nodeType":"206","messageId":"203","endLine":104,"endColumn":30},{"ruleId":"207","severity":1,"message":"208","line":105,"column":7,"nodeType":"209","endLine":105,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":107,"column":5,"nodeType":"209","endLine":107,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":131,"column":18,"nodeType":"212","messageId":"213","endLine":131,"endColumn":27},{"ruleId":"210","severity":1,"message":"214","line":132,"column":44,"nodeType":"215","messageId":"213","endLine":132,"endColumn":46},{"ruleId":"172","severity":1,"message":"216","line":150,"column":13,"nodeType":"174","messageId":"175","endLine":150,"endColumn":26},{"ruleId":"172","severity":1,"message":"217","line":2,"column":28,"nodeType":"174","messageId":"175","endLine":2,"endColumn":36},{"ruleId":"172","severity":1,"message":"218","line":16,"column":10,"nodeType":"174","messageId":"175","endLine":16,"endColumn":18},{"ruleId":"172","severity":1,"message":"219","line":23,"column":7,"nodeType":"174","messageId":"175","endLine":23,"endColumn":18},{"ruleId":"172","severity":1,"message":"220","line":38,"column":7,"nodeType":"174","messageId":"175","endLine":38,"endColumn":22},{"ruleId":"172","severity":1,"message":"221","line":39,"column":9,"nodeType":"174","messageId":"175","endLine":39,"endColumn":17},{"ruleId":"172","severity":1,"message":"222","line":41,"column":11,"nodeType":"174","messageId":"175","endLine":41,"endColumn":21},{"ruleId":"172","severity":1,"message":"223","line":42,"column":11,"nodeType":"174","messageId":"175","endLine":42,"endColumn":25},{"ruleId":"172","severity":1,"message":"224","line":52,"column":7,"nodeType":"174","messageId":"175","endLine":52,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":53,"column":13,"nodeType":"227","messageId":"228","endLine":53,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":163,"column":27,"nodeType":"206","messageId":"203","endLine":163,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":177,"column":7,"nodeType":"209","endLine":177,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":178,"column":33,"nodeType":"206","messageId":"203","endLine":178,"endColumn":35},{"ruleId":"207","severity":1,"message":"208","line":179,"column":7,"nodeType":"209","endLine":179,"endColumn":17},{"ruleId":"172","severity":1,"message":"229","line":9,"column":3,"nodeType":"174","messageId":"175","endLine":9,"endColumn":13},{"ruleId":"172","severity":1,"message":"230","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":13},{"ruleId":"172","severity":1,"message":"231","line":22,"column":7,"nodeType":"174","messageId":"175","endLine":22,"endColumn":10},{"ruleId":"172","severity":1,"message":"198","line":24,"column":5,"nodeType":"174","messageId":"175","endLine":24,"endColumn":14},{"ruleId":"172","severity":1,"message":"220","line":27,"column":7,"nodeType":"174","messageId":"175","endLine":27,"endColumn":22},{"ruleId":"172","severity":1,"message":"221","line":28,"column":9,"nodeType":"174","messageId":"175","endLine":28,"endColumn":17},{"ruleId":"172","severity":1,"message":"222","line":30,"column":11,"nodeType":"174","messageId":"175","endLine":30,"endColumn":21},{"ruleId":"172","severity":1,"message":"223","line":31,"column":11,"nodeType":"174","messageId":"175","endLine":31,"endColumn":25},{"ruleId":"172","severity":1,"message":"199","line":41,"column":7,"nodeType":"174","messageId":"175","endLine":41,"endColumn":25},{"ruleId":"210","severity":1,"message":"214","line":111,"column":57,"nodeType":"215","messageId":"213","endLine":111,"endColumn":59},{"ruleId":"210","severity":1,"message":"214","line":144,"column":22,"nodeType":"215","messageId":"213","endLine":144,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":169,"column":15,"nodeType":"206","messageId":"203","endLine":169,"endColumn":17},{"ruleId":"204","severity":1,"message":"232","line":317,"column":40,"nodeType":"206","messageId":"203","endLine":317,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":322,"column":45,"nodeType":"235","endLine":322,"endColumn":60},{"ruleId":"172","severity":1,"message":"236","line":4,"column":3,"nodeType":"174","messageId":"175","endLine":4,"endColumn":11},{"ruleId":"172","severity":1,"message":"237","line":7,"column":3,"nodeType":"174","messageId":"175","endLine":7,"endColumn":7},{"ruleId":"172","severity":1,"message":"238","line":8,"column":3,"nodeType":"174","messageId":"175","endLine":8,"endColumn":8},{"ruleId":"172","severity":1,"message":"239","line":9,"column":3,"nodeType":"174","messageId":"175","endLine":9,"endColumn":9},{"ruleId":"172","severity":1,"message":"240","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":8},{"ruleId":"172","severity":1,"message":"241","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":11},{"ruleId":"172","severity":1,"message":"242","line":13,"column":3,"nodeType":"174","messageId":"175","endLine":13,"endColumn":6},{"ruleId":"172","severity":1,"message":"243","line":14,"column":3,"nodeType":"174","messageId":"175","endLine":14,"endColumn":6},{"ruleId":"172","severity":1,"message":"244","line":16,"column":9,"nodeType":"174","messageId":"175","endLine":16,"endColumn":15},{"ruleId":"172","severity":1,"message":"245","line":19,"column":7,"nodeType":"174","messageId":"175","endLine":19,"endColumn":15},{"ruleId":"172","severity":1,"message":"231","line":20,"column":7,"nodeType":"174","messageId":"175","endLine":20,"endColumn":10},{"ruleId":"172","severity":1,"message":"246","line":21,"column":7,"nodeType":"174","messageId":"175","endLine":21,"endColumn":20},{"ruleId":"210","severity":1,"message":"214","line":72,"column":29,"nodeType":"215","messageId":"213","endLine":72,"endColumn":31},{"ruleId":"172","severity":1,"message":"247","line":84,"column":9,"nodeType":"174","messageId":"175","endLine":84,"endColumn":13},{"ruleId":"172","severity":1,"message":"248","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":29},{"ruleId":"172","severity":1,"message":"249","line":4,"column":31,"nodeType":"174","messageId":"175","endLine":4,"endColumn":43},{"ruleId":"172","severity":1,"message":"250","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":19},{"ruleId":"172","severity":1,"message":"231","line":9,"column":7,"nodeType":"174","messageId":"175","endLine":9,"endColumn":10},{"ruleId":"172","severity":1,"message":"251","line":11,"column":7,"nodeType":"174","messageId":"175","endLine":11,"endColumn":27},{"ruleId":"210","severity":1,"message":"214","line":40,"column":29,"nodeType":"215","messageId":"213","endLine":40,"endColumn":31},{"ruleId":"172","severity":1,"message":"236","line":4,"column":3,"nodeType":"174","messageId":"175","endLine":4,"endColumn":11},{"ruleId":"172","severity":1,"message":"252","line":5,"column":3,"nodeType":"174","messageId":"175","endLine":5,"endColumn":8},{"ruleId":"172","severity":1,"message":"253","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":9},{"ruleId":"172","severity":1,"message":"193","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":6},{"ruleId":"172","severity":1,"message":"241","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":11},{"ruleId":"172","severity":1,"message":"242","line":13,"column":3,"nodeType":"174","messageId":"175","endLine":13,"endColumn":6},{"ruleId":"172","severity":1,"message":"243","line":14,"column":3,"nodeType":"174","messageId":"175","endLine":14,"endColumn":6},{"ruleId":"207","severity":1,"message":"208","line":32,"column":5,"nodeType":"209","endLine":32,"endColumn":15},{"ruleId":"210","severity":1,"message":"214","line":33,"column":29,"nodeType":"215","messageId":"213","endLine":33,"endColumn":31},{"ruleId":"172","severity":1,"message":"193","line":3,"column":17,"nodeType":"174","messageId":"175","endLine":3,"endColumn":20},{"ruleId":"172","severity":1,"message":"240","line":3,"column":22,"nodeType":"174","messageId":"175","endLine":3,"endColumn":27},{"ruleId":"210","severity":1,"message":"214","line":92,"column":45,"nodeType":"215","messageId":"213","endLine":92,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":93,"column":25,"nodeType":"206","messageId":"203","endLine":93,"endColumn":27},{"ruleId":"210","severity":1,"message":"211","line":123,"column":14,"nodeType":"212","messageId":"213","endLine":123,"endColumn":23},{"ruleId":"210","severity":1,"message":"214","line":124,"column":42,"nodeType":"215","messageId":"213","endLine":124,"endColumn":44},{"ruleId":"172","severity":1,"message":"217","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":26,"column":5,"nodeType":"209","endLine":26,"endColumn":15},{"ruleId":"172","severity":1,"message":"239","line":2,"column":31,"nodeType":"174","messageId":"175","endLine":2,"endColumn":37},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["254"],"no-negated-in-lhs",["255"],"'logo' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'Words' is defined but never used.","'Phrases' is defined but never used.","'Recipes' is defined but never used.",["254"],["255"],"'Header' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Tag' is defined but never used.","'Modal' is defined but never used.","'getByText' is defined but never used.","'recipesAPI' is assigned a value but never used.","'contextAPI' is assigned a value but never used.","'API_ROUTE' is assigned a value but never used.","'animatedComponents' is assigned a value but never used.","no-dupe-keys","Duplicate key 'dataIndex'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","'selectOptions' is assigned a value but never used.","'useState' is defined but never used.","'IconName' is defined but never used.","'rangeConfig' is assigned a value but never used.","'TimeRelatedForm' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'rangeValue' is assigned a value but never used.","'rangeTimeValue' is assigned a value but never used.","'validateMessages' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'TimePicker' is defined but never used.","'DatePicker' is defined but never used.","'API' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Collapse' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'Checkbox' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Option' is assigned a value but never used.","'APIWords' is assigned a value but never used.","'AddWordsRoute' is assigned a value but never used.","'temp' is assigned a value but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'SizeContext' is defined but never used.","'APIWordsOfGroupRoute' is assigned a value but never used.","'Table' is defined but never used.","'Select' is defined but never used.","no-global-assign","no-unsafe-negation"]